{"name": "test_the_guest_can_view_the_rating_of_companies_for_the_selected_period", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=118.0.5993.70)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7FA348EF2+54786]\n\t(No symbol) [0x00007FF7FA2B5612]\n\t(No symbol) [0x00007FF7FA16A64B]\n\t(No symbol) [0x00007FF7FA14A9F5]\n\t(No symbol) [0x00007FF7FA1D0887]\n\t(No symbol) [0x00007FF7FA1E43CF]\n\t(No symbol) [0x00007FF7FA1CBC43]\n\t(No symbol) [0x00007FF7FA1A0941]\n\t(No symbol) [0x00007FF7FA1A1B84]\n\tGetHandleVerifier [0x00007FF7FA697F52+3524194]\n\tGetHandleVerifier [0x00007FF7FA6ED800+3874576]\n\tGetHandleVerifier [0x00007FF7FA6E5D7F+3843215]\n\tGetHandleVerifier [0x00007FF7FA3E5086+694166]\n\t(No symbol) [0x00007FF7FA2C0A88]\n\t(No symbol) [0x00007FF7FA2BCA94]\n\t(No symbol) [0x00007FF7FA2BCBC2]\n\t(No symbol) [0x00007FF7FA2ACC83]\n\tBaseThreadInitThunk [0x00007FFC33907344+20]\n\tRtlUserThreadStart [0x00007FFC343826B1+33]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8013d6446fa6887a9c1a10ab2d726553\")>\n\n    @allure.description(\"Check the guest can view the rating of companies for the selected period\")\n    @pytest.mark.smoke\n    def test_the_guest_can_view_the_rating_of_companies_for_the_selected_period(browser):\n        page = MainPage(browser, link)   # инициализируем Page Object, передаем в конструктор экземпляр драйвера и url адрес\n        browser.maximize_window()\n        page.open()\n>       page.go_to_company_rating()\n\ntest_main_page.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:15: in go_to_company_rating\n    press_to_company_rating = self.browser.find_element(*CompanyRating.PRESS_TO_RATING)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000214DC60BA90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF7FA2ACC83]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC33907344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFC343826B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=118.0.5993.70)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7FA348EF2+54786]\nE       \t(No symbol) [0x00007FF7FA2B5612]\nE       \t(No symbol) [0x00007FF7FA16A64B]\nE       \t(No symbol) [0x00007FF7FA14A9F5]\nE       \t(No symbol) [0x00007FF7FA1D0887]\nE       \t(No symbol) [0x00007FF7FA1E43CF]\nE       \t(No symbol) [0x00007FF7FA1CBC43]\nE       \t(No symbol) [0x00007FF7FA1A0941]\nE       \t(No symbol) [0x00007FF7FA1A1B84]\nE       \tGetHandleVerifier [0x00007FF7FA697F52+3524194]\nE       \tGetHandleVerifier [0x00007FF7FA6ED800+3874576]\nE       \tGetHandleVerifier [0x00007FF7FA6E5D7F+3843215]\nE       \tGetHandleVerifier [0x00007FF7FA3E5086+694166]\nE       \t(No symbol) [0x00007FF7FA2C0A88]\nE       \t(No symbol) [0x00007FF7FA2BCA94]\nE       \t(No symbol) [0x00007FF7FA2BCBC2]\nE       \t(No symbol) [0x00007FF7FA2ACC83]\nE       \tBaseThreadInitThunk [0x00007FFC33907344+20]\nE       \tRtlUserThreadStart [0x00007FFC343826B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "description": "Check the guest can view the rating of companies for the selected period", "start": 1697061913629, "stop": 1697061915736, "uuid": "0b05ca6c-f028-442e-bc19-29a296a22c00", "historyId": "89f5f0e19f6ead506bfcfdf4821aafb3", "testCaseId": "89f5f0e19f6ead506bfcfdf4821aafb3", "fullName": "test_main_page#test_the_guest_can_view_the_rating_of_companies_for_the_selected_period", "labels": [{"name": "tag", "value": "smoke"}, {"name": "suite", "value": "test_main_page"}, {"name": "host", "value": "DESKTOP-QTE9U4R"}, {"name": "thread", "value": "7744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main_page"}]}